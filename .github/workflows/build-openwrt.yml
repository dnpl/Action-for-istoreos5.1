name: Build-x86-64

on:
  push:
  workflow_dispatch:

jobs:
  Build:
    name: Build x86-64
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/checkout@v3
        with:
          repository: dnpl/istoreos
          path: istoreos
      - name: Cache
        uses: klever1988/cachewrtbuild@main
        with:
          ccache: 'true'
          prefix: ${{ github.workspace }}/istoreos
      - name: Delete Files
        run: |
          docker rmi `docker images -q`
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* adoptopenjdk* mysql* php* mongodb* dotnet* moby* snapd* || true
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
      - name: Check Space
        run: |
          df -h
      - name: Update Package
        run: |
          sudo -E apt-get update -y
          sudo -E apt-get upgrade -y
      - name: Install Package
        run: |
          sudo -E apt-get install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf swig mkisofs -y

      - name: Update Feeds
        run: |
          cd ./istoreos
          ./scripts/feeds update -a
          ./scripts/feeds install -a
      - name: Create Config
        run: |
          cd ./istoreos
          make defconfig
          cat ../x86-64.config > .config
          make defconfig
          echo -e 'CONFIG_DEVEL=y\nCONFIG_CCACHE=y' >> .config
      - name: Download package
        run: |
          cd ./istoreos
          make download -j8
      - name: Check Space
        run: |
          df -h
      - name: Build
        run: |
          cd ./istoreos
          echo -e "$(nproc) thread compile"
          make -j$(nproc) || make -j1 || make -j1 V=s
          echo "::set-output name=status::success"
          grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
          [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
          echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV
      - name: Upload All
        uses: actions/upload-artifact@v3
        with:
          name: All Build Products
          path: ./istoreos/bin
      - name: Upload Firmware
        uses: actions/upload-artifact@v3
        with:
          name: Firmware
          path: ./istoreos/bin/targets/x86/64/openwrt-x86-64-generic-*
      - name: Generate Config
        run: |
          cd ./istoreos
          ./scripts/diffconfig.sh > seed.config
          cat seed.config > ../x86-64.config
      - name: Upload Config
        uses: actions/upload-artifact@v3
        with:
          name: Config
          path: |
            ./istoreos/.config
            ./istoreos/seed.config
      - name: Push Config
        uses: EndBug/add-and-commit@v9
        with:
          add: 'x86-64.config'
